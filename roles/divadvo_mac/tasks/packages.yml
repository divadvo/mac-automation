- name: Update homebrew package index and install git
  homebrew:
    name: git
    state: latest
    update_homebrew: true
  retries: 3
  delay: 10
  tags:
  - brew

- name: Install command line tools via homebrew
  homebrew:
    name: '{{ homebrew_packages }}'
    state: latest
  retries: 3
  delay: 10
  tags:
  - brew

- name: Install GUI applications via homebrew cask
  homebrew_cask:
    name: '{{ homebrew_cask_packages }}'
    state: present
  retries: 3
  delay: 10
  tags:
  - brew

- name: Configure mise to disable Python tool management
  command: mise settings set disable_tools python
  changed_when: false
  tags:
  - mise

- name: Install and activate mise-managed tools globally
  command: >
    mise use -g
    node@{{ node_version }}
    ruby@{{ ruby_version }}
    bun@{{ bun_version }}
  tags:
  - mise

- name: Rebuild mise shims for installed tools
  command: mise reshim
  tags:
  - mise

- name: Install global npm tools
  command: >
    mise x --
    npm install -g
    {{ npm_tools | join(' ') }}
  tags:
  - node

- name: Install Python versions via uv
  command: >
    uv python install
    --reinstall
    {{ python_versions | join(' ') }}
  register: uv_python_install
  changed_when: "'All requested versions already installed' not in uv_python_install.stderr"
  tags:
  - uv

- name: Install Python tools via uv
  command: >
    uv tool install
    --python 3.13
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--with {{ w }}{% endfor %}
    {% endif %}
  loop: '{{ uv_tools }}'
  register: uv_tool_install
  changed_when: "'already installed' not in uv_tool_install.stderr"
  tags:
  - uv

- name: Upgrade Python tools via uv
  command: >
    uv tool upgrade
    {{ item.name }}
    {% if item.with is defined %}
    {% for w in item.with %}--upgrade-package {{ w }}{% endfor %}
    {% endif %}
  loop: '{{ uv_tools }}'
  register: uv_upgrade
  changed_when: "'Nothing to upgrade' not in uv_upgrade.stderr"
  tags:
  - uv

- name: Clean up uv cache
  command: uv cache prune
  register: uv_prune
  changed_when: "'Removed' in uv_prune.stderr"
  tags:
  - uv

- name: Install oh-my-zsh shell framework
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  args:
    creates: ~/.oh-my-zsh
  retries: 3
  delay: 10
  become: false

- name: Install Powerlevel10k zsh theme
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
    depth: 1
  retries: 3
  delay: 10
  become: false

- name: Install NVChad Neovim configuration
  git:
    repo: https://github.com/NvChad/starter
    dest: ~/.config/nvim
    depth: 1
  retries: 3
  delay: 10
  become: false

- name: Start and enable PostgreSQL database service
  shell: brew services restart postgresql@{{ postgresql_version }}
  register: postgres_restart
  changed_when: "'Successfully started' in postgres_restart.stdout"
  become: false